// Generated by view binder compiler. Do not edit!
package com.example.tournamentmanagerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tournamentmanagerapp.R;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTeamBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final Button btnAdd;

  @NonNull
  public final Button chooseImage;

  @NonNull
  public final ImageView teamImage;

  @NonNull
  public final EditText teamName;

  @NonNull
  public final Toolbar toolbarCancel;

  private ActivityTeamBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull Button btnAdd, @NonNull Button chooseImage,
      @NonNull ImageView teamImage, @NonNull EditText teamName, @NonNull Toolbar toolbarCancel) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.btnAdd = btnAdd;
    this.chooseImage = chooseImage;
    this.teamImage = teamImage;
    this.teamName = teamName;
    this.toolbarCancel = toolbarCancel;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTeamBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTeamBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_team, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTeamBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.btnAdd;
      Button btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.chooseImage;
      Button chooseImage = ViewBindings.findChildViewById(rootView, id);
      if (chooseImage == null) {
        break missingId;
      }

      id = R.id.teamImage;
      ImageView teamImage = ViewBindings.findChildViewById(rootView, id);
      if (teamImage == null) {
        break missingId;
      }

      id = R.id.teamName;
      EditText teamName = ViewBindings.findChildViewById(rootView, id);
      if (teamName == null) {
        break missingId;
      }

      id = R.id.toolbarCancel;
      Toolbar toolbarCancel = ViewBindings.findChildViewById(rootView, id);
      if (toolbarCancel == null) {
        break missingId;
      }

      return new ActivityTeamBinding((ConstraintLayout) rootView, appBarLayout, btnAdd, chooseImage,
          teamImage, teamName, toolbarCancel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
