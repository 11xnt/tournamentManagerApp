// Generated by view binder compiler. Do not edit!
package com.example.tournamentmanagerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tournamentmanagerapp.R;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTournamentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final Button btnAdd;

  @NonNull
  public final Button chooseImage;

  @NonNull
  public final TextView selectTeams;

  @NonNull
  public final TextView selectedTeams;

  @NonNull
  public final Toolbar toolbarCancel;

  @NonNull
  public final ImageView tournamentImage;

  @NonNull
  public final EditText tournamentMaxTeams;

  @NonNull
  public final EditText tournamentOrg;

  @NonNull
  public final TextView tournamentStartDate;

  @NonNull
  public final EditText tournamentTitle;

  private ActivityTournamentBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull Button btnAdd, @NonNull Button chooseImage,
      @NonNull TextView selectTeams, @NonNull TextView selectedTeams,
      @NonNull Toolbar toolbarCancel, @NonNull ImageView tournamentImage,
      @NonNull EditText tournamentMaxTeams, @NonNull EditText tournamentOrg,
      @NonNull TextView tournamentStartDate, @NonNull EditText tournamentTitle) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.btnAdd = btnAdd;
    this.chooseImage = chooseImage;
    this.selectTeams = selectTeams;
    this.selectedTeams = selectedTeams;
    this.toolbarCancel = toolbarCancel;
    this.tournamentImage = tournamentImage;
    this.tournamentMaxTeams = tournamentMaxTeams;
    this.tournamentOrg = tournamentOrg;
    this.tournamentStartDate = tournamentStartDate;
    this.tournamentTitle = tournamentTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTournamentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTournamentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_tournament, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTournamentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.btnAdd;
      Button btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.chooseImage;
      Button chooseImage = ViewBindings.findChildViewById(rootView, id);
      if (chooseImage == null) {
        break missingId;
      }

      id = R.id.selectTeams;
      TextView selectTeams = ViewBindings.findChildViewById(rootView, id);
      if (selectTeams == null) {
        break missingId;
      }

      id = R.id.selectedTeams;
      TextView selectedTeams = ViewBindings.findChildViewById(rootView, id);
      if (selectedTeams == null) {
        break missingId;
      }

      id = R.id.toolbarCancel;
      Toolbar toolbarCancel = ViewBindings.findChildViewById(rootView, id);
      if (toolbarCancel == null) {
        break missingId;
      }

      id = R.id.tournamentImage;
      ImageView tournamentImage = ViewBindings.findChildViewById(rootView, id);
      if (tournamentImage == null) {
        break missingId;
      }

      id = R.id.tournamentMaxTeams;
      EditText tournamentMaxTeams = ViewBindings.findChildViewById(rootView, id);
      if (tournamentMaxTeams == null) {
        break missingId;
      }

      id = R.id.tournamentOrg;
      EditText tournamentOrg = ViewBindings.findChildViewById(rootView, id);
      if (tournamentOrg == null) {
        break missingId;
      }

      id = R.id.tournamentStartDate;
      TextView tournamentStartDate = ViewBindings.findChildViewById(rootView, id);
      if (tournamentStartDate == null) {
        break missingId;
      }

      id = R.id.tournamentTitle;
      EditText tournamentTitle = ViewBindings.findChildViewById(rootView, id);
      if (tournamentTitle == null) {
        break missingId;
      }

      return new ActivityTournamentBinding((ConstraintLayout) rootView, appBarLayout, btnAdd,
          chooseImage, selectTeams, selectedTeams, toolbarCancel, tournamentImage,
          tournamentMaxTeams, tournamentOrg, tournamentStartDate, tournamentTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
